MH: 08.04.2022

=============  Ako sa pouziva  input typu DropDownBox v ASP.NET ==================

Roles: Edit.cshtml

1, zmiesany HTML styl a Microsoft ASP.NET Tag helper @Html.DropDownListFor
@*Aktivny*@

            <div class="form-group">
                <label asp-for="Aktivny" class="control-label"></label>
                @Html.DropDownListFor(m => m.Aktivny, 
                    new List<SelectListItem>
                        { new SelectListItem{Text="Áno", Value="A"},
                          new SelectListItem{Text="Nie", Value="N"}}, "Vyberte možnosť")
                <span asp-validation-for="Aktivny" class="text-danger"></span>
            </div>

TATO MOZNOST JE LEPSIA lebo tu uzivatel vidi vyber z moznosti Áno, alebo Nie. 
Na formulari je zobrazeny DropDown control.
--------------------------------------------------------------------------------------------------------------------------

2,  len  cisty HTML styl
@*Aktivny*@
            <div class="form-group">
                <label asp-for="Aktivny" class="control-label"></label>
                <select asp-for="Aktivny" class="form-control">
                    <option>A</option>
                    <option>N</option>
                  </select>          
                <span asp-validation-for="Aktivny" class="text-danger"></span>
            </div>

Nie je to az take dokonale, az po kliku na textbox,  uzivatelovi sa roztvori select a vidi vyber z moznosti A alebo N.
Na formulari nie je zobrazeny select control so sipkou. Az po kliku na kontrol sa otvori select kontrol.
-------------------------------------------------------------------------------------------------------------------------
3, 

public IActionResult Create()
{
    var vm = new MyViewModel();
    vm.EmployeesList = new List<Employee>
    {
        new Employee { Id = 1, FullName = "Shyju" },
        new Employee { Id = 2, FullName = "Bryan" }
    };
    return View(vm);
}

<select asp-for="EmployeeId" 
        asp-items="@(new SelectList(Model.EmployeesList, nameof(Employee.Id), nameof(Employee.FullName)))">
        <option>Please select one</option>
    </select>

-----------------------------------------------------------------------------------------------------------------------------------------
       === ZOBRAZENIE A EDITOVANIE Date typu a DateTime typu ===

        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd.MM.yy HH:mm}")]
        [Display(Name = "Vytvorené")]
        public DateTime? Vytvorene { get; set; }
 
        PRI EDITOVANI HODNOTY NA WEB STRANKE SA ZOBRAZI KALENDAR TYPU MESIAC A DEN!!!!

        --------------------

        [DataType(DataType.DateTime)]
        [DisplayFormat(DataFormatString = "{0:dd.MM.yy HH:mm}")]
        [Display(Name = "Vytvorené")]
        public DateTime? Vytvorene { get; set; }

        PRI EDITOVANI HODNOTY NA WEB STRANKE SA ZOBRAZI KALENDAR TYPU MESIAC, DEN, HODINY, MINUTY a SEKUNDY!!!!

        NA WEB STRANKE UZ NEMUSIME NIC ROBIT!!!!!  LEN TO NEVIEM FORMATOVAT!!!
         <label asp-for="Vytvorene" class="control-label"></label>
         <input asp-for="Vytvorene" class="form-control"/>
-----------------------------------------------------------------------------------------------------------------------------------------

 
 
 ZakazkyMH  Index.cshtml
 

 Vypis formatovaneho datumu a casu.
 @Html.DisplayFor(modelItem => item.Zmenene)   Neda sa editovat, ale pouzije formatovaci retazec z attributu.

 <td><label asp-for="DatumOd" class="control-label"></label></td>

 <td><input asp-for="DatumOd" class="form-control"/> poskytne kalendar, ale NEVIEM TO FORMATOVAT!!!


Roles: Index.cshtml

 Pri vypise DateTime? typu je dobre otestovat ci polozka je zadana a az potom ju vypisat:
 
 @if (item.Vytvorene.HasValue) @item.Vytvorene.Value.ToString("dd.MM.yyyy HH:mm:ss")
 Pozn: tento kod skompiluje IIS server do bytoveho kodu pre WebAssembly a na stranke to uz spracuje WebAssembly;


<td>
                @Html.DisplayFor(modelItem => item.Vytvoril)
            </td>
            <td>
               @* @Html.DisplayFor(modelItem => item.Vytvorene).Value.ToString("dd.MM.yyyy HH:mm:ss")*@
                @if (item.Vytvorene.HasValue) @item.Vytvorene.Value.ToString("dd.MM.yyyy HH:mm")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zmenil)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Zmenene)*@
                    @if (item.Zmenene.HasValue) item.Zmenene.Value.ToString("dd.MM.yyyy HH:mm");
                </td>
            <td>